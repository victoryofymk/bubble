server.port=8099
### 是否显示banner，可选值[console|log|off]
spring.main.banner-mode=off

#日志级别从低到高分为TRACE < DEBUG < INFO < WARN < ERROR < FATAL，如果设置为WARN，则低于WARN的信息都不会输出
logging.level.root=DEBUG
logging.path=/Users/yanmingkun/IdeaProjects/opt/ymk/product/bubble/logs
#数据源配置
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://192.168.1.10:3306/bubble?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=bubble
spring.datasource.password=bubble
#spring.datasource.schema=assembly/data.sql
#spring.datasource.sql-script-encoding:UTF-8
#devtools 重启配置
spring.devtools.restart.exclude=static/**,public/**
#jpa 配置
spring.jpa.database=mysql
spring.jpa.show_sql=true
#ddl-auto 四个值的解释
#
#create： 每次加载hibernate时都会删除上一次的生成的表，然后根据你的model类再重新来生成新表，哪怕两次没有任何改变也要这样执行，这就是导致数据库表数据丢失的一个重要原因。
#create-drop ：每次加载hibernate时根据model类生成表，但是sessionFactory一关闭,表就自动删除。
#update：最常用的属性，第一次加载hibernate时根据model类会自动建立起表的结构（前提是先建立好数据库），以后加载hibernate时根据 model类自动更新表结构，即使表结构改变了但表中的行仍然存在不会删除以前的行。要注意的是当部署到服务器后，表结构是不会被马上建立起来的，是要等 应用第一次运行起来后才会。
#validate ：每次加载hibernate时，验证创建数据库表结构，只会和数据库中的表进行比较，不会创建新表，但是会插入新值。 5、 none : 什么都不做。
spring.jpa.hibernate.ddl-auto=create
spring.jpa.database-platform=com.it.ymk.bubble.config.MySQL5DialectUTF8
# 是否开启thymeleaf缓存
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/templates/
# 是否开启freemarker缓存
spring.freemarker.cache=false
# REDIS (RedisProperties)
# Redis数据库索引（默认为0）
spring.redis.database=0  
# Redis服务器地址
spring.redis.host=10.12.12.107
# Redis服务器连接端口
spring.redis.port=6379  
# Redis服务器连接密码（默认为空）
spring.redis.password=redis_sax
#配置健康检查
#监控所有的接口
management.endpoints.web.exposure.include=*
#自定义actuator端口
management.server.port=8088
#管理上下文
management.server.servlet.context-path=/monitor
#web上下文,默认actuator
management.endpoints.web.base-path=/actuator
management.server.ssl.enabled=false
management.endpoint.health.show-details=always
management.endpoint.shutdown.enabled=true
#只允许本机连接，禁止远程管理
#management.server.address=127.0.0.1
#admin 管理
spring.boot.admin.client.url=http://192.168.1.10:8000
#eureka
eureka.client.security.basic.user=eureka
eureka.client.security.basic.password=123456
eureka.client.serviceUrl[defaultZone]=http://${eureka.client.security.basic.user}:${eureka.client.security.basic.password}@localhost:9000/eureka